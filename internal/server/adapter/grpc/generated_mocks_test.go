// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/StasMerzlyakov/go-metrics/internal/server/adapter/grpc (interfaces: MetricApp)

// Package grpc_test is a generated GoMock package.
package grpc_test

import (
	context "context"
	reflect "reflect"

	domain "github.com/StasMerzlyakov/go-metrics/internal/server/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockMetricApp is a mock of MetricApp interface.
type MockMetricApp struct {
	ctrl     *gomock.Controller
	recorder *MockMetricAppMockRecorder
}

// MockMetricAppMockRecorder is the mock recorder for MockMetricApp.
type MockMetricAppMockRecorder struct {
	mock *MockMetricApp
}

// NewMockMetricApp creates a new mock instance.
func NewMockMetricApp(ctrl *gomock.Controller) *MockMetricApp {
	mock := &MockMetricApp{ctrl: ctrl}
	mock.recorder = &MockMetricAppMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricApp) EXPECT() *MockMetricAppMockRecorder {
	return m.recorder
}

// UpdateAll mocks base method.
func (m *MockMetricApp) UpdateAll(arg0 context.Context, arg1 []domain.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAll", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAll indicates an expected call of UpdateAll.
func (mr *MockMetricAppMockRecorder) UpdateAll(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAll", reflect.TypeOf((*MockMetricApp)(nil).UpdateAll), arg0, arg1)
}
